/**
 * NOTE: This class is auto generated by the swagger code generator program ({{{generatorVersion}}}).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package {{package}};

{{#imports}}import {{import}};
{{/imports}}
import com.fasterxml.jackson.databind.ObjectMapper;
import io.micronaut.http.*;
import io.micronaut.http.annotation.*;
import io.swagger.v3.oas.annotations.*;
import io.swagger.v3.oas.annotations.responses.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

{{#useBeanValidation}}
import javax.validation.Valid;
import javax.validation.constraints.*;
{{/useBeanValidation}}
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.Optional;
{{#async}}
import java.util.concurrent.CompletableFuture;
{{/async}}

{{>generatedAnnotation}}
{{#operations}}
public interface {{classname}} {

    {{^isDelegate}}
    Logger log = LoggerFactory.getLogger({{classname}}.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeaders().get("Accept"));
    }
    {{/isDelegate}}
    {{#isDelegate}}
    {{classname}}Delegate getDelegate();
    {{/isDelegate}}

{{#operation}}
{{#contents}}

    @Operation(summary = "{{{summary}}}", operationId = "{{{operationId}}}", description = "{{{notes}}}"{{#hasAuthMethods}}, authorizations = {
        {{#authMethods}}@Authorization(value = "{{name}}"{{#isOAuth}}, scopes = {
            {{#scopes}}@AuthorizationScope(scope = "{{scope}}", description = "{{description}}"){{#hasMore}},
            {{/hasMore}}{{/scopes}}
            }{{/isOAuth}}){{#hasMore}},
        {{/hasMore}}{{/authMethods}}
    }{{/hasAuthMethods}}, tags={ {{#vendorExtensions.x-tags}}"{{tag}}",{{/vendorExtensions.x-tags}} })
    {{#responses}}
    @ApiResponse(responseCode = "{{{code}}}", description = "{{{message}}}")
    {{/responses}}
    {{#implicitHeaders}}
    @ApiImplicitParams({
    {{#headerParams}}
    {{>implicitHeader}}
    {{/headerParams}}
    })
    {{/implicitHeaders}}
    @{{#lambda.capitalise}}{{httpMethod}}{{/lambda.capitalise}}(value = "{{{path}}}",{{#singleContentTypes}}{{#hasProduces}}
        produces = "{{{vendorExtensions.x-accepts}}}", {{/hasProduces}}{{#hasConsumes}}
        consumes = "{{{vendorExtensions.x-contentType}}}",{{/hasConsumes}}{{/singleContentTypes}}{{^singleContentTypes}}{{#hasProduces}}
        produces = { {{#produces}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/produces}} }{{/hasProduces}}{{#hasConsumes}},
        consumes = { {{#consumes}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/consumes}} }{{/hasConsumes}}{{/singleContentTypes}}
        )
    default {{#responseWrapper}}{{.}}<{{/responseWrapper}}HttpResponse<{{>returnTypes}}>{{#responseWrapper}}>{{/responseWrapper}} {{#delegate-method}}_{{/delegate-method}}{{operationId}}({{#parameters}}{{>queryParams}}{{>pathParams}}{{>headerParams}}{{>bodyParams}}{{>formParams}}{{#hasMore}},{{/hasMore}}{{/parameters}}) {
        {{#delegate-method}}
        return {{operationId}}({{#parameters}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/parameters}});
    }

    // Override this method
    default {{#responseWrapper}}{{.}}<{{/responseWrapper}}HttpResponse<{{>returnTypes}}>{{#responseWrapper}}>{{/responseWrapper}} {{operationId}}({{#parameters}}{{^isFile}}{{{dataType}}}{{/isFile}}{{#isFile}}MultipartFile{{/isFile}} {{paramName}}{{#hasMore}},{{/hasMore}}{{/parameters}}) {
        {{/delegate-method}}
        {{^isDelegate}}
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        {{#examples}}
            if (getAcceptHeader().get().contains("{{{contentType}}}")) {
                try {
                    HttpResponse<{{>exampleReturnTypes}}> response = HttpResponse.<{{>exampleReturnTypes}}>status(HttpStatus.NOT_IMPLEMENTED).body(getObjectMapper().get().readValue("{{#lambda.removeLineBreak}}{{#lambda.escapeDoubleQuote}}{{{example}}}{{/lambda.escapeDoubleQuote}}{{/lambda.removeLineBreak}}", {{>exampleReturnTypes}}.class));
                    return {{#async}}CompletableFuture.completedFuture({{/async}}response{{#async}}){{/async}};
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type {{{contentType}}}", e);
                    return {{#async}}CompletableFuture.completedFuture({{/async}}HttpResponse.status(HttpStatus.INTERNAL_SERVER_ERROR){{#async}}){{/async}};
                }
            }
        {{/examples}}
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default {{classname}} interface so no example is generated");
        }
        return {{#async}}CompletableFuture.completedFuture({{/async}}HttpResponse.status(HttpStatus.NOT_IMPLEMENTED){{#async}}){{/async}};
        {{/isDelegate}}
        {{#isDelegate}}
        return getDelegate().{{operationId}}({{#parameters}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/parameters}});
        {{/isDelegate}}
    }

{{/contents}}
{{/operation}}
}
{{/operations}}